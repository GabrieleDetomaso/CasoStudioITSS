GRUPPO 1

assignMarkToStudent

1. Per il test: markRight
    - Il test fallisce perchè il voto 31 non viene accettato, in quanto non compreso nel range dei voti accettabili
        nel metodo setMark.
    - Risoluzione: il range viene modificato in modo da comprendere i voti da 18 a 31


addNewCourseAttender

1. Per il test: studentNull
	- Fallimento del test per mancanza di controllo sull'inserimento di uno studente con valore nullo
	- Rilosuzione: aggiunta di un controllo e creazione della classe NullStudentException per gestire l'eccezione

2. Per il test: dateWrong
    - Fallimento di T6 per mancato lancio di un'eccezione sul controllo della data inserita
    - Risoluzione: aggiunta di un controllo che permette di verificare se la data inserita è effettivamente quella odierna

3. Per il test: realDateExpireRegistrationDateFalsed
    - Fallimento di T8 per mancato lancio di un'eccezione sul controllo della data inserita
    - Risoluzione: risoluzione del test T6



GRUPPO 2

getSubscriptionsByDate

1. Per il test: subscriptionNotFoundInRangeInAndNotInclusive
    - Fail per errori interni al metodo getSubscriptionByDate. Veniva richiamato su toDate
        il metodo get, al posto del metodo getLong, che trasforma la data in un long e permette
        di effettuare confronti. Chiamando il metodo get effettuare confronti con le date generava eccezioni.
    - Risoluzione: a riga 169 è stato sostituito il metodo get con il metodo getLong

2. Per il test: fromDateGreatherThanToDate
    - A seguito del fallimento del test è stato aggiunto un controllo per prevenire che fromDate sia
        maggiore di toDate

3. Per il test: fromDatetoDateEqualsNotInclusive
    - A seguito del fallimento del test è stato aggiunto un controllo per prevenire che fromDate e toDate
        siano uguali se inclusive è false

4. Per il test: noStudentsInCourse
    - A seguito del fallimento del test è stato aggiunto un controllo per evitare che il metodo
        venga eseguito se il corso è vuoto

getStudentsWithHigherMark
1. Per T4 e T5: controllo per aggiungere il return di un insieme vuoto quando non vi sono voti assegnati
2. Per T6: modificato il codice in fase di structural based testing per resituire un insieme vuoto quando non sono presenti
            voti assegnati

countMarksInInclusiveRange
1. Per T7 e T8: aggiunta l'inclusività nel range all'interno del metodo
2. Per T10: aggiunta controllo per from > to
3. Per T11: aggiunta eccezione CourseEmptyException